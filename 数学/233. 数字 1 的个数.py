'''
给定一个整数 n，计算所有小于等于 n 的非负整数中数字 1 出现的个数。

示例 1：

输入：n = 13
输出：6
示例 2：

输入：n = 0
输出：0
 
提示：
0 <= n <= 2 * 109
'''

'''
思路:
以2593为例,先看个位: cur=3>1,所以前缀可以有259+1=260个
十位: cur=9>1,所以前缀可以有25+1=260个,后缀有10,11,12,...10个,所以一共260个
百位: cur=5>1,前缀2+1=3个,后缀100,101,...100个,所以一共300个
千位: cur=2>1,前缀只能为0一个,后缀1000,1001,...1000个,一共1000个
'''
# 用时98%
class Solution:
    def countDigitOne(self, n: int) -> int:
        res = 0
        pos = 0                         # 记录后缀有几位
        copy_n = n
        while n:
            cur = n%10
            n //= 10
            if cur > 1:                 # 后缀拉满
                res += (n+1)*(10**pos)
            elif cur == 1:              # 部分后缀(零头)
                res += n*(10**pos) + copy_n%(10**pos) + 1
            else:                       # 没有后缀
                res += n*(10**pos)
            pos += 1
        return res
        























        
